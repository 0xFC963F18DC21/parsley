Index.PACKAGES = {"parsley" : [{"name" : "parsley.BitGen", "shortDescription" : "This implementation uses a predicate to generate a BitSet.", "object" : "parsley\/BitGen$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (scala.Char) ⇒ Boolean): BitSetImpl", "member" : "parsley.BitGen.apply", "link" : "parsley\/BitGen$.html#apply(f:Char=>Boolean):parsley.BitSetImpl", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/BitGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/BitGen$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/BitGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/BitGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/BitGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/BitGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/BitGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/BitGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/BitGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/BitGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/BitGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/BitGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/BitGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/BitGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/BitGen$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/BitGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/BitGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/BitGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/BitGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "parsley.Char", "shortDescription" : "", "object" : "parsley\/Char$.html", "members_object" : [{"label" : "whitespaceSet", "tail" : ": Set[scala.Char]", "member" : "parsley.Char.whitespaceSet", "link" : "parsley\/Char$.html#whitespaceSet:Set[Char]", "kind" : "lazy val"}, {"label" : "octDigitSet", "tail" : ": Set[scala.Char]", "member" : "parsley.Char.octDigitSet", "link" : "parsley\/Char$.html#octDigitSet:Set[Char]", "kind" : "lazy val"}, {"label" : "hexDigitSet", "tail" : ": Set[scala.Char]", "member" : "parsley.Char.hexDigitSet", "link" : "parsley\/Char$.html#hexDigitSet:Set[Char]", "kind" : "lazy val"}, {"label" : "alphaNumSet", "tail" : "(): Set[scala.Char]", "member" : "parsley.Char.alphaNumSet", "link" : "parsley\/Char$.html#alphaNumSet:Set[Char]", "kind" : "def"}, {"label" : "digitSet", "tail" : "(): Set[scala.Char]", "member" : "parsley.Char.digitSet", "link" : "parsley\/Char$.html#digitSet:Set[Char]", "kind" : "def"}, {"label" : "letterSet", "tail" : "(): Set[scala.Char]", "member" : "parsley.Char.letterSet", "link" : "parsley\/Char$.html#letterSet:Set[Char]", "kind" : "def"}, {"label" : "lowerSet", "tail" : "(): Set[scala.Char]", "member" : "parsley.Char.lowerSet", "link" : "parsley\/Char$.html#lowerSet:Set[Char]", "kind" : "def"}, {"label" : "upperSet", "tail" : "(): Set[scala.Char]", "member" : "parsley.Char.upperSet", "link" : "parsley\/Char$.html#upperSet:Set[Char]", "kind" : "def"}, {"label" : "isWhitespace", "tail" : "(c: scala.Char): Boolean", "member" : "parsley.Char.isWhitespace", "link" : "parsley\/Char$.html#isWhitespace(c:Char):Boolean", "kind" : "def"}, {"label" : "octDigit", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.octDigit", "link" : "parsley\/Char$.html#octDigit:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "hexDigit", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.hexDigit", "link" : "parsley\/Char$.html#hexDigit:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "digit", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.digit", "link" : "parsley\/Char$.html#digit:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "letter", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.letter", "link" : "parsley\/Char$.html#letter:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "alphaNum", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.alphaNum", "link" : "parsley\/Char$.html#alphaNum:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "lower", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.lower", "link" : "parsley\/Char$.html#lower:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "upper", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.upper", "link" : "parsley\/Char$.html#upper:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "tab", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.tab", "link" : "parsley\/Char$.html#tab:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "endOfLine", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.endOfLine", "link" : "parsley\/Char$.html#endOfLine:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "crlf", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.crlf", "link" : "parsley\/Char$.html#crlf:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "newline", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.newline", "link" : "parsley\/Char$.html#newline:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "whitespaces", "tail" : ": Parsley[Unit]", "member" : "parsley.Char.whitespaces", "link" : "parsley\/Char$.html#whitespaces:parsley.Parsley[Unit]", "kind" : "val"}, {"label" : "whitespace", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.whitespace", "link" : "parsley\/Char$.html#whitespace:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "spaces", "tail" : ": Parsley[Unit]", "member" : "parsley.Char.spaces", "link" : "parsley\/Char$.html#spaces:parsley.Parsley[Unit]", "kind" : "val"}, {"label" : "space", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.space", "link" : "parsley\/Char$.html#space:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "anyChar", "tail" : ": Parsley[scala.Char]", "member" : "parsley.Char.anyChar", "link" : "parsley\/Char$.html#anyChar:parsley.Parsley[Char]", "kind" : "val"}, {"label" : "noneOf", "tail" : "(cs: Set[scala.Char]): Parsley[scala.Char]", "member" : "parsley.Char.noneOf", "link" : "parsley\/Char$.html#noneOf(cs:Set[Char]):parsley.Parsley[Char]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(cs: Set[scala.Char]): Parsley[scala.Char]", "member" : "parsley.Char.oneOf", "link" : "parsley\/Char$.html#oneOf(cs:Set[Char]):parsley.Parsley[Char]", "kind" : "def"}, {"label" : "string", "tail" : "(s: String): Parsley[String]", "member" : "parsley.Char.string", "link" : "parsley\/Char$.html#string(s:String):parsley.Parsley[String]", "kind" : "def"}, {"label" : "satisfy", "tail" : "(f: (scala.Char) ⇒ Boolean): Parsley[scala.Char]", "member" : "parsley.Char.satisfy", "link" : "parsley\/Char$.html#satisfy(f:Char=>Boolean):parsley.Parsley[Char]", "kind" : "def"}, {"label" : "char", "tail" : "(c: scala.Char): Parsley[scala.Char]", "member" : "parsley.Char.char", "link" : "parsley\/Char$.html#char(c:Char):parsley.Parsley[Char]", "kind" : "def"}, {"label" : "charLift", "tail" : "(c: scala.Char): Parsley[scala.Char]", "member" : "parsley.Char.charLift", "link" : "parsley\/Char$.html#charLift(c:Char):parsley.Parsley[Char]", "kind" : "implicit def"}, {"label" : "stringLift", "tail" : "(str: String): Parsley[String]", "member" : "parsley.Char.stringLift", "link" : "parsley\/Char$.html#stringLift(str:String):parsley.Parsley[String]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Char$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Char$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Char$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Char$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Char$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Char$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Char$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Char$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Char$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Char$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Char$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Char$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/Char$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Char$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/Char$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/Char$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Char$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Char$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Char$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "parsley.CharSet", "shortDescription" : "This implementation uses a set of valid tokens.", "object" : "parsley\/CharSet$.html", "members_object" : [{"label" : "apply", "tail" : "(cs: Set[scala.Char]): BitSetImpl", "member" : "parsley.CharSet.apply", "link" : "parsley\/CharSet$.html#apply(cs:Set[Char]):parsley.BitSetImpl", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/CharSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/CharSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/CharSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/CharSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/CharSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/CharSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/CharSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/CharSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/CharSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/CharSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/CharSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/CharSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/CharSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/CharSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/CharSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/CharSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/CharSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/CharSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/CharSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "parsley.Combinator", "shortDescription" : "", "object" : "parsley\/Combinator$.html", "members_object" : [{"label" : "many1Till", "tail" : "(p: ⇒ Parsley[A], end: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.many1Till", "link" : "parsley\/Combinator$.html#many1Till[A,B](p:=>parsley.Parsley[A],end:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "manyTill", "tail" : "(p: ⇒ Parsley[A], end: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.manyTill", "link" : "parsley\/Combinator$.html#manyTill[A,B](p:=>parsley.Parsley[A],end:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "notFollowedBy", "tail" : "(p: Parsley[_]): Parsley[Unit]", "member" : "parsley.Combinator.notFollowedBy", "link" : "parsley\/Combinator$.html#notFollowedBy(p:parsley.Parsley[_]):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "eof", "tail" : ": Parsley[Unit]", "member" : "parsley.Combinator.eof", "link" : "parsley\/Combinator$.html#eof:parsley.Parsley[Unit]", "kind" : "val"}, {"label" : "chainPost", "tail" : "(p: ⇒ Parsley[A], op: ⇒ Parsley[(A) ⇒ A]): ChainPost[A]", "member" : "parsley.Combinator.chainPost", "link" : "parsley\/Combinator$.html#chainPost[A](p:=>parsley.Parsley[A],op:=>parsley.Parsley[A=>A]):parsley.DeepEmbedding.ChainPost[A]", "kind" : "def"}, {"label" : "chainl1", "tail" : "(p: ⇒ Parsley[A], op: ⇒ Parsley[(A, A) ⇒ A]): Parsley[A]", "member" : "parsley.Combinator.chainl1", "link" : "parsley\/Combinator$.html#chainl1[A](p:=>parsley.Parsley[A],op:=>parsley.Parsley[(A,A)=>A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "chainPre", "tail" : "(p: ⇒ Parsley[A], op: ⇒ Parsley[(A) ⇒ A]): Parsley[A]", "member" : "parsley.Combinator.chainPre", "link" : "parsley\/Combinator$.html#chainPre[A](p:=>parsley.Parsley[A],op:=>parsley.Parsley[A=>A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "chainr1", "tail" : "(p: ⇒ Parsley[A], op: ⇒ Parsley[(A, A) ⇒ A]): Parsley[A]", "member" : "parsley.Combinator.chainr1", "link" : "parsley\/Combinator$.html#chainr1[A](p:=>parsley.Parsley[A],op:=>parsley.Parsley[(A,A)=>A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "chainl", "tail" : "(p: ⇒ Parsley[A], op: ⇒ Parsley[(A, A) ⇒ A], x: A): Parsley[A]", "member" : "parsley.Combinator.chainl", "link" : "parsley\/Combinator$.html#chainl[A](p:=>parsley.Parsley[A],op:=>parsley.Parsley[(A,A)=>A],x:A):parsley.Parsley[A]", "kind" : "def"}, {"label" : "chainr", "tail" : "(p: ⇒ Parsley[A], op: ⇒ Parsley[(A, A) ⇒ A], x: A): Parsley[A]", "member" : "parsley.Combinator.chainr", "link" : "parsley\/Combinator$.html#chainr[A](p:=>parsley.Parsley[A],op:=>parsley.Parsley[(A,A)=>A],x:A):parsley.Parsley[A]", "kind" : "def"}, {"label" : "endBy1", "tail" : "(p: ⇒ Parsley[A], sep: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.endBy1", "link" : "parsley\/Combinator$.html#endBy1[A,B](p:=>parsley.Parsley[A],sep:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "endBy", "tail" : "(p: ⇒ Parsley[A], sep: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.endBy", "link" : "parsley\/Combinator$.html#endBy[A,B](p:=>parsley.Parsley[A],sep:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "sepEndBy1", "tail" : "(p: ⇒ Parsley[A], sep: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.sepEndBy1", "link" : "parsley\/Combinator$.html#sepEndBy1[A,B](p:=>parsley.Parsley[A],sep:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "sepEndBy", "tail" : "(p: ⇒ Parsley[A], sep: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.sepEndBy", "link" : "parsley\/Combinator$.html#sepEndBy[A,B](p:=>parsley.Parsley[A],sep:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "sepBy1", "tail" : "(p: ⇒ Parsley[A], sep: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.sepBy1", "link" : "parsley\/Combinator$.html#sepBy1[A,B](p:=>parsley.Parsley[A],sep:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "sepBy", "tail" : "(p: ⇒ Parsley[A], sep: ⇒ Parsley[B]): Parsley[List[A]]", "member" : "parsley.Combinator.sepBy", "link" : "parsley\/Combinator$.html#sepBy[A,B](p:=>parsley.Parsley[A],sep:=>parsley.Parsley[B]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "skipManyN", "tail" : "(n: Int, p: ⇒ Parsley[A]): Parsley[Unit]", "member" : "parsley.Combinator.skipManyN", "link" : "parsley\/Combinator$.html#skipManyN[A](n:Int,p:=>parsley.Parsley[A]):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "skipSome", "tail" : "(p: ⇒ Parsley[A]): Parsley[Unit]", "member" : "parsley.Combinator.skipSome", "link" : "parsley\/Combinator$.html#skipSome[A](p:=>parsley.Parsley[A]):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "manyN", "tail" : "(n: Int, p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.Combinator.manyN", "link" : "parsley\/Combinator$.html#manyN[A](n:Int,p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "some", "tail" : "(p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.Combinator.some", "link" : "parsley\/Combinator$.html#some[A](p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "between", "tail" : "(open: ⇒ Parsley[O], close: ⇒ Parsley[C], p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.Combinator.between", "link" : "parsley\/Combinator$.html#between[O,C,A](open:=>parsley.Parsley[O],close:=>parsley.Parsley[C],p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "optional", "tail" : "(p: ⇒ Parsley[A]): Parsley[Unit]", "member" : "parsley.Combinator.optional", "link" : "parsley\/Combinator$.html#optional[A](p:=>parsley.Parsley[A]):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "decide", "tail" : "(p: ⇒ Parsley[Option[A]]): Parsley[A]", "member" : "parsley.Combinator.decide", "link" : "parsley\/Combinator$.html#decide[A](p:=>parsley.Parsley[Option[A]]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "option", "tail" : "(p: ⇒ Parsley[A]): Parsley[Option[A]]", "member" : "parsley.Combinator.option", "link" : "parsley\/Combinator$.html#option[A](p:=>parsley.Parsley[A]):parsley.Parsley[Option[A]]", "kind" : "def"}, {"label" : "repeat", "tail" : "(n: Int, p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.Combinator.repeat", "link" : "parsley\/Combinator$.html#repeat[A](n:Int,p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "attemptChoice", "tail" : "(ps: List[Parsley[A]]): Parsley[A]", "member" : "parsley.Combinator.attemptChoice", "link" : "parsley\/Combinator$.html#attemptChoice[A](ps:List[parsley.Parsley[A]]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "choice", "tail" : "(ps: List[Parsley[A]]): Parsley[A]", "member" : "parsley.Combinator.choice", "link" : "parsley\/Combinator$.html#choice[A](ps:List[parsley.Parsley[A]]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Combinator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Combinator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Combinator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Combinator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Combinator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Combinator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Combinator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Combinator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Combinator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Combinator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Combinator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Combinator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/Combinator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Combinator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/Combinator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/Combinator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Combinator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Combinator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Combinator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "parsley.ExpressionParser", "shortDescription" : "This class is used to generate efficient expression parsers given a table of operatorsin operator of operator precedence and an atomic value that represents the smallestpart of the expression.", "object" : "parsley\/ExpressionParser$.html", "members_class" : [{"label" : "expr", "tail" : ": Parsley[A]", "member" : "parsley.ExpressionParser.expr", "link" : "parsley\/ExpressionParser.html#expr:parsley.Parsley[A]", "kind" : "lazy val"}, {"member" : "parsley.ExpressionParser#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/ExpressionParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/ExpressionParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/ExpressionParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/ExpressionParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/ExpressionParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/ExpressionParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/ExpressionParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/ExpressionParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/ExpressionParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/ExpressionParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/ExpressionParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/ExpressionParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/ExpressionParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/ExpressionParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/ExpressionParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/ExpressionParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/ExpressionParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/ExpressionParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/ExpressionParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Postfixes", "tail" : "", "member" : "parsley.ExpressionParser.Postfixes", "link" : "parsley\/ExpressionParser$.html#Postfixes[A]extendsExpressionParser.OpList[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Prefixes", "tail" : "", "member" : "parsley.ExpressionParser.Prefixes", "link" : "parsley\/ExpressionParser$.html#Prefixes[A]extendsExpressionParser.OpList[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Infixes", "tail" : "", "member" : "parsley.ExpressionParser.Infixes", "link" : "parsley\/ExpressionParser$.html#Infixes[A]extendsExpressionParser.OpList[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "OpList", "tail" : "", "member" : "parsley.ExpressionParser.OpList", "link" : "parsley\/ExpressionParser$.html#OpList[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "AssocRight", "tail" : "", "member" : "parsley.ExpressionParser.AssocRight", "link" : "parsley\/ExpressionParser$.html#AssocRight", "kind" : "object"}, {"label" : "AssocLeft", "tail" : "", "member" : "parsley.ExpressionParser.AssocLeft", "link" : "parsley\/ExpressionParser$.html#AssocLeft", "kind" : "object"}, {"label" : "Assoc", "tail" : "", "member" : "parsley.ExpressionParser.Assoc", "link" : "parsley\/ExpressionParser$.html#AssocextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/ExpressionParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/ExpressionParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/ExpressionParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/ExpressionParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/ExpressionParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/ExpressionParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/ExpressionParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/ExpressionParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/ExpressionParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/ExpressionParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/ExpressionParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/ExpressionParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/ExpressionParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/ExpressionParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/ExpressionParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/ExpressionParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/ExpressionParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/ExpressionParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/ExpressionParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "parsley\/ExpressionParser.html", "kind" : "class"}, {"name" : "parsley.Failure", "shortDescription" : "Returned on parsing failure", "members_case class" : [{"member" : "parsley.Failure#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "parsley.Failure.msg", "link" : "parsley\/package$$Failure.html#msg:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/package$$Failure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/package$$Failure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/package$$Failure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/package$$Failure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/package$$Failure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/package$$Failure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/package$$Failure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Failure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Failure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Failure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/package$$Failure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/package$$Failure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/package$$Failure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/package$$Failure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/package$$Failure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/package$$Failure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "parsley\/package$$Failure.html", "kind" : "case class"}, {"name" : "parsley.Impl", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Impl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Impl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Impl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Impl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Impl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Impl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Impl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Impl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Impl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Impl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Impl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Impl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/Impl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Impl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/Impl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/Impl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Impl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Impl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Impl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The Impl trait is used to provide implementation of the parser requirements from LanguageDef", "trait" : "parsley\/Impl.html", "kind" : "trait"}, {"name" : "parsley.LanguageDef", "shortDescription" : "This class is required to construct a TokenParser.", "members_case class" : [{"member" : "parsley.LanguageDef#<init>", "error" : "unsupported entity"}, {"label" : "space", "tail" : ": Impl", "member" : "parsley.LanguageDef.space", "link" : "parsley\/LanguageDef.html#space:parsley.Impl", "kind" : "val"}, {"label" : "caseSensitive", "tail" : ": Boolean", "member" : "parsley.LanguageDef.caseSensitive", "link" : "parsley\/LanguageDef.html#caseSensitive:Boolean", "kind" : "val"}, {"label" : "operators", "tail" : ": Set[String]", "member" : "parsley.LanguageDef.operators", "link" : "parsley\/LanguageDef.html#operators:Set[String]", "kind" : "val"}, {"label" : "keywords", "tail" : ": Set[String]", "member" : "parsley.LanguageDef.keywords", "link" : "parsley\/LanguageDef.html#keywords:Set[String]", "kind" : "val"}, {"label" : "opLetter", "tail" : ": Impl", "member" : "parsley.LanguageDef.opLetter", "link" : "parsley\/LanguageDef.html#opLetter:parsley.Impl", "kind" : "val"}, {"label" : "opStart", "tail" : ": Impl", "member" : "parsley.LanguageDef.opStart", "link" : "parsley\/LanguageDef.html#opStart:parsley.Impl", "kind" : "val"}, {"label" : "identLetter", "tail" : ": Impl", "member" : "parsley.LanguageDef.identLetter", "link" : "parsley\/LanguageDef.html#identLetter:parsley.Impl", "kind" : "val"}, {"label" : "identStart", "tail" : ": Impl", "member" : "parsley.LanguageDef.identStart", "link" : "parsley\/LanguageDef.html#identStart:parsley.Impl", "kind" : "val"}, {"label" : "nestedComments", "tail" : ": Boolean", "member" : "parsley.LanguageDef.nestedComments", "link" : "parsley\/LanguageDef.html#nestedComments:Boolean", "kind" : "val"}, {"label" : "commentLine", "tail" : ": String", "member" : "parsley.LanguageDef.commentLine", "link" : "parsley\/LanguageDef.html#commentLine:String", "kind" : "val"}, {"label" : "commentEnd", "tail" : ": String", "member" : "parsley.LanguageDef.commentEnd", "link" : "parsley\/LanguageDef.html#commentEnd:String", "kind" : "val"}, {"label" : "commentStart", "tail" : ": String", "member" : "parsley.LanguageDef.commentStart", "link" : "parsley\/LanguageDef.html#commentStart:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/LanguageDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/LanguageDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/LanguageDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/LanguageDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/LanguageDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/LanguageDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/LanguageDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/LanguageDef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/LanguageDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/LanguageDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/LanguageDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/LanguageDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/LanguageDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/LanguageDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/LanguageDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/LanguageDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "parsley\/LanguageDef.html", "kind" : "case class"}, {"name" : "parsley.NotRequired", "shortDescription" : "This implementation states that the required functionality is not required.", "object" : "parsley\/NotRequired$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/NotRequired$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/NotRequired$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/NotRequired$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/NotRequired$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/NotRequired$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/NotRequired$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/NotRequired$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/NotRequired$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/NotRequired$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/NotRequired$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/NotRequired$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/NotRequired$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/NotRequired$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/NotRequired$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/NotRequired$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/NotRequired$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/NotRequired$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "parsley.Parser", "shortDescription" : "The implementation provided is a parser which parses the required token.", "members_case class" : [{"member" : "parsley.Parser#<init>", "error" : "unsupported entity"}, {"label" : "p", "tail" : ": Parsley[_]", "member" : "parsley.Parser.p", "link" : "parsley\/Parser.html#p:parsley.Parsley[_]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Parser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Parser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Parser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Parser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Parser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Parser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Parser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Parser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Parser.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Parser.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Parser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Parser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Parser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "parsley\/Parser.html", "kind" : "case class"}, {"name" : "parsley.Parsley", "shortDescription" : "This is the class that encapsulates the act of parsing and running an object of this class with runParser willparse the string given as input to runParser.", "object" : "parsley\/Parsley$.html", "members_class" : [{"label" : "unsafe", "tail" : "(): Unit", "member" : "parsley.Parsley.unsafe", "link" : "parsley\/Parsley.html#unsafe():Unit", "kind" : "final def"}, {"label" : "V", "tail" : "", "member" : "parsley.Parsley.V", "link" : "parsley\/Parsley.html#V=Any", "kind" : "final type"}, {"label" : "U", "tail" : "", "member" : "parsley.Parsley.U", "link" : "parsley\/Parsley.html#U=Any", "kind" : "final type"}, {"label" : "T", "tail" : "", "member" : "parsley.Parsley.T", "link" : "parsley\/Parsley.html#T=Any", "kind" : "final type"}, {"label" : "InstrBuffer", "tail" : "", "member" : "parsley.Parsley.InstrBuffer", "link" : "parsley\/Parsley.html#InstrBuffer=parsley.ResizableArray[parsley.instructions.Instr]", "kind" : "final type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Parsley.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Parsley.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Parsley.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Parsley.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Parsley.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Parsley.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Parsley.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parsley.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parsley.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parsley.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Parsley.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Parsley.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/Parsley.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Parsley.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/Parsley.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/Parsley.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Parsley.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Parsley.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Parsley.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "preprocess", "tail" : "(cont: (Parsley[A]) ⇒ Bounce[Parsley[_]])(seen: Set[Parsley[_]], label: UnsafeOption[String], depth: Int): Bounce[Parsley[_]]", "member" : "parsley.Parsley.preprocess", "link" : "parsley\/Parsley.html#preprocess(cont:parsley.Parsley[A]=>parsley.Bounce[parsley.Parsley[_]])(implicitseen:Set[parsley.Parsley[_]],implicitlabel:parsley.UnsafeOption[String],implicitdepth:Int):parsley.Bounce[parsley.Parsley[_]]", "kind" : "abstract def"}], "members_object" : [{"label" : "local", "tail" : "(v: Var, f: (R) ⇒ R, p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.Parsley.local", "link" : "parsley\/Parsley$.html#local[R,A](v:parsley.Var,f:R=>R,p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "local", "tail" : "(v: Var, p: ⇒ Parsley[R], q: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.Parsley.local", "link" : "parsley\/Parsley$.html#local[R,A](v:parsley.Var,p:=>parsley.Parsley[R],q:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "local", "tail" : "(v: Var, x: R, p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.Parsley.local", "link" : "parsley\/Parsley$.html#local[R,A](v:parsley.Var,x:R,p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "modify", "tail" : "(v: Var, f: (S) ⇒ S): Parsley[Unit]", "member" : "parsley.Parsley.modify", "link" : "parsley\/Parsley$.html#modify[S](v:parsley.Var,f:S=>S):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "put", "tail" : "(v: Var, p: ⇒ Parsley[S]): Parsley[Unit]", "member" : "parsley.Parsley.put", "link" : "parsley\/Parsley$.html#put[S](v:parsley.Var,p:=>parsley.Parsley[S]):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "put", "tail" : "(v: Var, x: S): Parsley[Unit]", "member" : "parsley.Parsley.put", "link" : "parsley\/Parsley$.html#put[S](v:parsley.Var,x:S):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(v: Var): Parsley[S]", "member" : "parsley.Parsley.get", "link" : "parsley\/Parsley$.html#get[S](v:parsley.Var):parsley.Parsley[S]", "kind" : "def"}, {"label" : "pos", "tail" : ": Parsley[(Int, Int)]", "member" : "parsley.Parsley.pos", "link" : "parsley\/Parsley$.html#pos:parsley.Parsley[(Int,Int)]", "kind" : "val"}, {"label" : "col", "tail" : ": Parsley[Int]", "member" : "parsley.Parsley.col", "link" : "parsley\/Parsley$.html#col:parsley.Parsley[Int]", "kind" : "val"}, {"label" : "line", "tail" : ": Parsley[Int]", "member" : "parsley.Parsley.line", "link" : "parsley\/Parsley$.html#line:parsley.Parsley[Int]", "kind" : "val"}, {"label" : "traverse", "tail" : "(f: (A) ⇒ Parsley[B], xs: Seq[A]): Parsley[List[B]]", "member" : "parsley.Parsley.traverse", "link" : "parsley\/Parsley$.html#traverse[A,B](f:A=>parsley.Parsley[B],xs:Seq[A]):parsley.Parsley[List[B]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(ps: Seq[Parsley[A]]): Parsley[List[A]]", "member" : "parsley.Parsley.sequence", "link" : "parsley\/Parsley$.html#sequence[A](ps:Seq[parsley.Parsley[A]]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "skipMany", "tail" : "(p: ⇒ Parsley[A]): Parsley[Unit]", "member" : "parsley.Parsley.skipMany", "link" : "parsley\/Parsley$.html#skipMany[A](p:=>parsley.Parsley[A]):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "many", "tail" : "(p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.Parsley.many", "link" : "parsley\/Parsley$.html#many[A](p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : ": Parsley[Unit]", "member" : "parsley.Parsley.unit", "link" : "parsley\/Parsley$.html#unit:parsley.Parsley[Unit]", "kind" : "val"}, {"label" : "unexpected", "tail" : "(msg: String): Parsley[Nothing]", "member" : "parsley.Parsley.unexpected", "link" : "parsley\/Parsley$.html#unexpected(msg:String):parsley.Parsley[Nothing]", "kind" : "def"}, {"label" : "empty", "tail" : ": Parsley[Nothing]", "member" : "parsley.Parsley.empty", "link" : "parsley\/Parsley$.html#empty:parsley.Parsley[Nothing]", "kind" : "val"}, {"label" : "fail", "tail" : "(msg: String): Parsley[Nothing]", "member" : "parsley.Parsley.fail", "link" : "parsley\/Parsley$.html#fail(msg:String):parsley.Parsley[Nothing]", "kind" : "def"}, {"label" : "label", "tail" : "(p: Parsley[A], msg: String): Parsley[A]", "member" : "parsley.Parsley.label", "link" : "parsley\/Parsley$.html#label[A](p:parsley.Parsley[A],msg:String):parsley.Parsley[A]", "kind" : "def"}, {"label" : "lookAhead", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.Parsley.lookAhead", "link" : "parsley\/Parsley$.html#lookAhead[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.Parsley.attempt", "link" : "parsley\/Parsley$.html#attempt[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "join", "tail" : "(p: ⇒ Parsley[Parsley[A]]): Parsley[A]", "member" : "parsley.Parsley.join", "link" : "parsley\/Parsley$.html#join[A](p:=>parsley.Parsley[parsley.Parsley[A]]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "lift3", "tail" : "(f: (A, B, C) ⇒ D, p: ⇒ Parsley[A], q: ⇒ Parsley[B], r: ⇒ Parsley[C]): Parsley[D]", "member" : "parsley.Parsley.lift3", "link" : "parsley\/Parsley$.html#lift3[A,B,C,D](f:(A,B,C)=>D,p:=>parsley.Parsley[A],q:=>parsley.Parsley[B],r:=>parsley.Parsley[C]):parsley.Parsley[D]", "kind" : "def"}, {"label" : "lift2", "tail" : "(f: (A, B) ⇒ C, p: ⇒ Parsley[A], q: ⇒ Parsley[B]): Parsley[C]", "member" : "parsley.Parsley.lift2", "link" : "parsley\/Parsley$.html#lift2[A,B,C](f:(A,B)=>C,p:=>parsley.Parsley[A],q:=>parsley.Parsley[B]):parsley.Parsley[C]", "kind" : "def"}, {"label" : "pure", "tail" : "(x: A): Parsley[A]", "member" : "parsley.Parsley.pure", "link" : "parsley\/Parsley$.html#pure[A](x:A):parsley.Parsley[A]", "kind" : "def"}, {"label" : "LazyChooseParsley", "tail" : "", "member" : "parsley.Parsley.LazyChooseParsley", "link" : "parsley\/Parsley$.html#LazyChooseParsley[P,+A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "LazyMapParsley", "tail" : "", "member" : "parsley.Parsley.LazyMapParsley", "link" : "parsley\/Parsley$.html#LazyMapParsley[A,+B]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "LazyFlattenParsley", "tail" : "", "member" : "parsley.Parsley.LazyFlattenParsley", "link" : "parsley\/Parsley$.html#LazyFlattenParsley[+A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "LazyAppParsley", "tail" : "", "member" : "parsley.Parsley.LazyAppParsley", "link" : "parsley\/Parsley$.html#LazyAppParsley[A,+B]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "LazyParsley", "tail" : "", "member" : "parsley.Parsley.LazyParsley", "link" : "parsley\/Parsley$.html#LazyParsley[P,+A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Parsley$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Parsley$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Parsley$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Parsley$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Parsley$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Parsley$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Parsley$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parsley$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parsley$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Parsley$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Parsley$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Parsley$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/Parsley$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Parsley$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/Parsley$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/Parsley$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Parsley$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Parsley$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Parsley$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "parsley\/Parsley.html", "kind" : "class"}, {"name" : "parsley.Predicate", "shortDescription" : "The implementation provided is a function which matches on the input streams characters", "members_case class" : [{"member" : "parsley.Predicate#<init>", "error" : "unsupported entity"}, {"label" : "f", "tail" : ": (scala.Char) ⇒ Boolean", "member" : "parsley.Predicate.f", "link" : "parsley\/Predicate.html#f:Char=>Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/Predicate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/Predicate.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/Predicate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/Predicate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/Predicate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/Predicate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/Predicate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Predicate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Predicate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/Predicate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/Predicate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/Predicate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/Predicate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/Predicate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/Predicate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/Predicate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "parsley\/Predicate.html", "kind" : "case class"}, {"name" : "parsley.Result", "shortDescription" : "Result of a parser.", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/package$$Result.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/package$$Result.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/package$$Result.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/package$$Result.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/package$$Result.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/package$$Result.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/package$$Result.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Result.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Result.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Result.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/package$$Result.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/package$$Result.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/package$$Result.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/package$$Result.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/package$$Result.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/package$$Result.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/package$$Result.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/package$$Result.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/package$$Result.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "parsley\/package$$Result.html", "kind" : "class"}, {"name" : "parsley.Success", "shortDescription" : "Returned when a parser succeeded.", "members_case class" : [{"member" : "parsley.Success#<init>", "error" : "unsupported entity"}, {"label" : "x", "tail" : ": A", "member" : "parsley.Success.x", "link" : "parsley\/package$$Success.html#x:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/package$$Success.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/package$$Success.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/package$$Success.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/package$$Success.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/package$$Success.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/package$$Success.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/package$$Success.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Success.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Success.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/package$$Success.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/package$$Success.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/package$$Success.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/package$$Success.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/package$$Success.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/package$$Success.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/package$$Success.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "parsley\/package$$Success.html", "kind" : "case class"}, {"name" : "parsley.TokenParser", "shortDescription" : "When provided with a LanguageDef, this class will produce a large variety of parsers that can be used fortokenisation of a language.", "members_class" : [{"label" : "commaSep1", "tail" : "(p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.TokenParser.commaSep1", "link" : "parsley\/TokenParser.html#commaSep1[A](p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "commaSep", "tail" : "(p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.TokenParser.commaSep", "link" : "parsley\/TokenParser.html#commaSep[A](p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "semiSep1", "tail" : "(p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.TokenParser.semiSep1", "link" : "parsley\/TokenParser.html#semiSep1[A](p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "semiSep", "tail" : "(p: ⇒ Parsley[A]): Parsley[List[A]]", "member" : "parsley.TokenParser.semiSep", "link" : "parsley\/TokenParser.html#semiSep[A](p:=>parsley.Parsley[A]):parsley.Parsley[List[A]]", "kind" : "def"}, {"label" : "dot", "tail" : ": Parsley[scala.Char]", "member" : "parsley.TokenParser.dot", "link" : "parsley\/TokenParser.html#dot:parsley.Parsley[Char]", "kind" : "lazy val"}, {"label" : "colon", "tail" : ": Parsley[scala.Char]", "member" : "parsley.TokenParser.colon", "link" : "parsley\/TokenParser.html#colon:parsley.Parsley[Char]", "kind" : "lazy val"}, {"label" : "comma", "tail" : ": Parsley[scala.Char]", "member" : "parsley.TokenParser.comma", "link" : "parsley\/TokenParser.html#comma:parsley.Parsley[Char]", "kind" : "lazy val"}, {"label" : "semi", "tail" : ": Parsley[scala.Char]", "member" : "parsley.TokenParser.semi", "link" : "parsley\/TokenParser.html#semi:parsley.Parsley[Char]", "kind" : "lazy val"}, {"label" : "brackets", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.TokenParser.brackets", "link" : "parsley\/TokenParser.html#brackets[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "angles", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.TokenParser.angles", "link" : "parsley\/TokenParser.html#angles[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "braces", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.TokenParser.braces", "link" : "parsley\/TokenParser.html#braces[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "parens", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.TokenParser.parens", "link" : "parsley\/TokenParser.html#parens[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "skipComments", "tail" : ": Parsley[Unit]", "member" : "parsley.TokenParser.skipComments", "link" : "parsley\/TokenParser.html#skipComments:parsley.Parsley[Unit]", "kind" : "lazy val"}, {"label" : "whiteSpace_", "tail" : ": (Impl) ⇒ Parsley[Unit]", "member" : "parsley.TokenParser.whiteSpace_", "link" : "parsley\/TokenParser.html#whiteSpace_:parsley.Impl=>parsley.Parsley[Unit]", "kind" : "val"}, {"label" : "whiteSpace", "tail" : ": Parsley[Unit]", "member" : "parsley.TokenParser.whiteSpace", "link" : "parsley\/TokenParser.html#whiteSpace:parsley.Parsley[Unit]", "kind" : "lazy val"}, {"label" : "lexeme", "tail" : "(p: ⇒ Parsley[A]): Parsley[A]", "member" : "parsley.TokenParser.lexeme", "link" : "parsley\/TokenParser.html#lexeme[A](p:=>parsley.Parsley[A]):parsley.Parsley[A]", "kind" : "def"}, {"label" : "symbol_", "tail" : "(name: String): Parsley[String]", "member" : "parsley.TokenParser.symbol_", "link" : "parsley\/TokenParser.html#symbol_(name:String):parsley.Parsley[String]", "kind" : "def"}, {"label" : "symbol", "tail" : "(name: scala.Char): Parsley[scala.Char]", "member" : "parsley.TokenParser.symbol", "link" : "parsley\/TokenParser.html#symbol(name:Char):parsley.Parsley[Char]", "kind" : "def"}, {"label" : "symbol", "tail" : "(name: String): Parsley[String]", "member" : "parsley.TokenParser.symbol", "link" : "parsley\/TokenParser.html#symbol(name:String):parsley.Parsley[String]", "kind" : "def"}, {"label" : "octal", "tail" : ": Parsley[Int]", "member" : "parsley.TokenParser.octal", "link" : "parsley\/TokenParser.html#octal:parsley.Parsley[Int]", "kind" : "lazy val"}, {"label" : "hexadecimal", "tail" : ": Parsley[Int]", "member" : "parsley.TokenParser.hexadecimal", "link" : "parsley\/TokenParser.html#hexadecimal:parsley.Parsley[Int]", "kind" : "lazy val"}, {"label" : "decimal", "tail" : ": Parsley[Int]", "member" : "parsley.TokenParser.decimal", "link" : "parsley\/TokenParser.html#decimal:parsley.Parsley[Int]", "kind" : "lazy val"}, {"label" : "naturalOrFloat", "tail" : ": Parsley[Either[Int, Double]]", "member" : "parsley.TokenParser.naturalOrFloat", "link" : "parsley\/TokenParser.html#naturalOrFloat:parsley.Parsley[Either[Int,Double]]", "kind" : "lazy val"}, {"label" : "number", "tail" : ": Parsley[Either[Int, Double]]", "member" : "parsley.TokenParser.number", "link" : "parsley\/TokenParser.html#number:parsley.Parsley[Either[Int,Double]]", "kind" : "lazy val"}, {"label" : "float", "tail" : ": Parsley[Double]", "member" : "parsley.TokenParser.float", "link" : "parsley\/TokenParser.html#float:parsley.Parsley[Double]", "kind" : "lazy val"}, {"label" : "unsignedFloat", "tail" : ": Parsley[Double]", "member" : "parsley.TokenParser.unsignedFloat", "link" : "parsley\/TokenParser.html#unsignedFloat:parsley.Parsley[Double]", "kind" : "lazy val"}, {"label" : "integer", "tail" : ": Parsley[Int]", "member" : "parsley.TokenParser.integer", "link" : "parsley\/TokenParser.html#integer:parsley.Parsley[Int]", "kind" : "lazy val"}, {"label" : "natural", "tail" : ": Parsley[Int]", "member" : "parsley.TokenParser.natural", "link" : "parsley\/TokenParser.html#natural:parsley.Parsley[Int]", "kind" : "lazy val"}, {"label" : "rawStringLiteral", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.rawStringLiteral", "link" : "parsley\/TokenParser.html#rawStringLiteral:parsley.Parsley[String]", "kind" : "lazy val"}, {"label" : "stringLiteral_", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.stringLiteral_", "link" : "parsley\/TokenParser.html#stringLiteral_:parsley.Parsley[String]", "kind" : "lazy val"}, {"label" : "stringLiteral", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.stringLiteral", "link" : "parsley\/TokenParser.html#stringLiteral:parsley.Parsley[String]", "kind" : "lazy val"}, {"label" : "charLiteral", "tail" : ": Parsley[scala.Char]", "member" : "parsley.TokenParser.charLiteral", "link" : "parsley\/TokenParser.html#charLiteral:parsley.Parsley[Char]", "kind" : "lazy val"}, {"label" : "operator_", "tail" : "(name: String): Parsley[Unit]", "member" : "parsley.TokenParser.operator_", "link" : "parsley\/TokenParser.html#operator_(name:String):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "operator", "tail" : "(name: String): Parsley[Unit]", "member" : "parsley.TokenParser.operator", "link" : "parsley\/TokenParser.html#operator(name:String):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "reservedOp", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.reservedOp", "link" : "parsley\/TokenParser.html#reservedOp:parsley.Parsley[String]", "kind" : "lazy val"}, {"label" : "reservedOp_", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.reservedOp_", "link" : "parsley\/TokenParser.html#reservedOp_:parsley.Parsley[String]", "kind" : "lazy val"}, {"label" : "userOp", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.userOp", "link" : "parsley\/TokenParser.html#userOp:parsley.Parsley[String]", "kind" : "lazy val"}, {"label" : "keyword", "tail" : "(name: String): Parsley[Unit]", "member" : "parsley.TokenParser.keyword", "link" : "parsley\/TokenParser.html#keyword(name:String):parsley.Parsley[Unit]", "kind" : "def"}, {"label" : "identifier", "tail" : ": Parsley[String]", "member" : "parsley.TokenParser.identifier", "link" : "parsley\/TokenParser.html#identifier:parsley.Parsley[String]", "kind" : "lazy val"}, {"member" : "parsley.TokenParser#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "parsley\/TokenParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "parsley\/TokenParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "parsley\/TokenParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "parsley\/TokenParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "parsley\/TokenParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "parsley\/TokenParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "parsley\/TokenParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/TokenParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/TokenParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "parsley\/TokenParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "parsley\/TokenParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "parsley\/TokenParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "parsley\/TokenParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "parsley\/TokenParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "parsley\/TokenParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "parsley\/TokenParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "parsley\/TokenParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/TokenParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/TokenParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "parsley\/TokenParser.html", "kind" : "class"}, {"name" : "parsley.Var", "shortDescription" : "This class is used to index registers within the mutable state.", "members_case class" : [{"member" : "parsley.Var#<init>", "error" : "unsupported entity"}, {"label" : "v", "tail" : ": Int", "member" : "parsley.Var.v", "link" : "parsley\/package$$Var.html#v:Int", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "parsley\/package$$Var.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "parsley\/package$$Var.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "parsley\/package$$Var.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "parsley\/package$$Var.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "parsley\/package$$Var.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "parsley\/package$$Var.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "parsley\/package$$Var.html", "kind" : "case class"}]};